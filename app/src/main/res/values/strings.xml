<resources><!--Okay because they never exactly say in tutorials what this file is for, but this is where you store your more permenant strings.!-->
    <!--The real question is why I am going to bother adding comments here... But I am!-->
    <string name="app_name">Geeky Math</string>
    <!--Doesn't the name of this say it?!-->

    <string name="action_settings">Settings</string>
    <string name="learn">Learn Binary</string>
    <!--Name the learn class!-->
    <string name="learn2">Learn Hexadecimal</string>
    <string name="test1">Decimal to Binary</string>
    <string name="test2">Binary to Decimal</string>
    <string name="test3">Mixed Decimal/Binary Conversions</string>
    <string name="test4">Decimal to Hexadecimal</string>
    <string name="test5">Hexadecimal to Decimal</string>
    <string name="test6">Mixed Decimal/Hexadecimal Conversions</string>
    <!--Note to self... Maybe word this better!-->
    <string name="title_activity_test">Test</string>
    <string name="message">Type in your answer</string>
    <string name="Check">Check</string>
    <string name="title_activity_answer">Answer</string>
    <string name="cont">Continue</string>
    <string name="streak"><br />Current Streak:</string>
    <string name="invalid">null</string>
    <!--Yes I made a null string... Deal with it!-->
    <string name="instructions">Convert the following number to binary.</string>
    <!--Really questioning why I made this...!-->
    <string name="menu">Main Menu</string>
    <string name="chart">Chart</string>
    <string name="title_activity_learn">Learn</string>
    <string name="hex_input_label">HexInput</string>
    <string name="subtype_en_US">English (US)</string>

    <string name="hexInput">Please make sure you are using HexInput as your keyboard.</string>
    <string name="hexInput2">This can be accessed through Settings, Language and Input, under Keyboard and input Methods.</string>
    <string name="hexInput3">Check the box next to the words "HexInput".</string>
    <string name="hexInput4">Select the answer box and check your notifications to change the keyboard..</string>

    <string name="prev">Previous Correct Answer: </string>
    <!--Silently questioning why I have the one earlier if Android Studio had made this! Well... I guess this isn't so silent anymore!-->

    <string name="intro">
        Welcome! Before you practice with converting decimal numbers to binary and vice versa, you\'ll need to learn how.\n
        \nSo, this is your place to run through a quick, beginner-friendly tutorial.\n
        \nTo navigate the tutorial, just swipe your finger left or right across the screen.</string>

    <string name="decimalsystem">You should know the number 512. But how did you learn that?\n
        \nThink back to 2nd grade and remember math class teaching you the 1\'s, 10\'s, and 100\'s places.\n
        \nNow let\'s write out 512 with the places underneath.
        \n
    </string>

    <string name="decimalsystem2">
        \nWhen you write this out, you\’re saying that you have 5 one hundreds, 1 ten, and 2 ones.
        \n\n
    </string>
    <string name="decimalsystem3">
        \n
        \nThis should be how you first learned how to count with the hundreds and tens places. Now that you\'re refreshed, let\'s move to something new.\n\n
    </string>

    <string name="reading1">So before diving into binary numbers, you need to learn how to read bases other than decimal.\n
        \nWhen working in other bases, such as binary and octal, it’s easier to think through a problem if you read the digits rather than read the number as a whole.
        \n
        \nLet\’s look at 512 again.\n
    </string>

    <string name="fivehundredtwelve">\t512</string>

    <string name="reading2">\nTry reading it as “five, one, two” instead of reading “five hundred twelve”.
        \nGot it?
        \nNow do the same thing with\n
    </string>

    <string name="ten">\t10</string>

    <string name="reading3">\nDid you read “ten” or “one, zero”? If you read “ten”, keep practicing. If you read “one, zero”, you\'re on the right track.\n\n</string>

    <string name="bases">The decimal system is the system of numbers that we humans read. We use base 10, which is why we have the 10s place.
        \nIn decimal, we have ten digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9. In binary, we have only two digits: 0 and 1.
        \nSimilar to the decimal system, binary has place values.  However, it uses different places. Instead of the hundreds, tens, and ones places, we have the ones, twos, fours, eights, and so on places. In order to help figure out the pattern, check out this chart.\n
    </string>
    <string name="bases2">
        \nBase 10 and base 2 to the zeroth power both correspond to a place value of one. In fact, the value of the first place equals one for all bases.\n
        \nNow how about the bases to the first power? Both of them have a place value equal to the base itself. That goes for all bases, but to keep it simple, we\’re still using only these two bases.
        \nTo get the next place value, just multiply the initial place value by the number of the base! In base 10, the place value is multiplied by 10 each time. In base 2 or binary, the place value doubles each time.
        </string>
    <string name="practiceProblems">
        Think you\'re getting it? Let\'s try a few easy practice problems.
        \n</string>
        \n\tPlaceholder: Practice Problems 1
        \n
    <string name="practiceProblems2">\nGreat job! Did you notice something about those problems? Let\'s take a look at a few.\n</string>
    <string name="practiceProblems21">\nHopefully you know that all these numbers are odd, but do you see something else that their binary equivalents have in common? They all end in 1! The only way to write any odd number in binary is to end it with a one.</string>

    <string name="finishingup">That\’s all there is to it! You should be ready to get out there and start translating binary numbers into decimal numbers for humans to read, and vice versa.\n
        \nYou can read this over again or you can head on back to the home menu by pressing the four rectangles in the top right hand corner and start practicing. Have fun and remember binary!
    </string>

    <string name ="hexIntro">
        \nNOTE: Before learning hexadecimal, it is strongly suggested that you first learn binary. Even if you already know binary, we recommend that you review the binary tutorial before proceeding.
        \nSo, decimal has ten digits. Binary has two. How many does hexadecimal have?
        \nWell, hexa = six, and deci = ten…so…
        \nThere’s 16 digits.
        \nWhat?? How can there by 16 digits?
        \nCalm down, we’ll explain. But first, let\’s make sure we know the place values.
        \nAs usual, we get the exponents of the base (in this case, 16) to get the place values.
    </string>

    <string name="hexIntro2">
        \nSo it would look like this.
    </string>

    <string name="hexIntro3">
        \nAnd…we’ll stop there, before the numbers get too big and messy.
    </string>

    <string name ="hexDigits">
        \n  Now, I\’m going to explain how it\’s possible to have 16 digits.
        \nWe have our usual ten digits, as you know: 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9. (Count on your fingers. It really is 10 digits).
        \nBut if we need 16 digits, we are going to need something else to represent the other 6 digits!
        \nHere’s the solution: we’ll use letters for the other 6 digits. More specifically, we\’ll use the letters A, B, C, D, E, and F, because those are the first six letters of the alphabet.
        \nSo, our 16 digits are:
        \n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F
        \nI know it seems like it doesn\’t make any sense. But if you think about it, a digit is simply a representation of a value. We can use letters to represent values. The digit A in hexadecimal is the same as the number 10 in decimal, or 1010 in binary.
    </string>

    <string name="hexDigits2">
        \nBy the way, you may want to memorize the 16 digits of hexadecimal and what number of the decimal system they correspond to. It’s important in hexadecimal conversions.
    </string>

    <string name ="hexIntroB">
        \n  Now that we\’ve learned the concept, it\’s time to learn how to do conversions with hexadecimal.
        \nBefore we proceed, though, you need to learn just a bit of terminology. Firstly, do you know what a bit is? Think of a bit as a digit in binary, either a 0 or a 1. A byte is what you call eight binary digits put together.
        \nNow, here’s the most important term you need to know: a nibble. That’s four bits, or one-half of a byte. Basically, a nibble is what you call a group of four binary digits. If you use nibbles when doing conversions with hexadecimal, your life will be easier.
        \nSimply get the binary number and divide it into groups of four, or nibbles.
        \n111 1110
        \nNotice that the first group has only three digits. That\’s okay. Just make sure you divide them into four as much as you can, and you can leave any remainders at the beginning of the number.
        \nConvert each group of four, or nibble, into decimal. Remember binary conversions? Give yourself a moment to work that out.
        \nOnce you do that, you have 7 and 14 in decimal. Use the chart, or your own memory. What are 7 and 14 in hexadecimal?
        \n7 = 7
        \n14 = E
        \nSo, 110011110 = 7E in hexadecimal.
    </string>

    <string name = "hexToBin">
        \n  How do you go from hexadecimal to binary, though?
        \nLet’s try E3.
        \nJust do it digit-by-digit, converting each hexadecimal digit into a binary nibble.
        \n3 in hexadecimal is still 3 in decimal. Look at the chart. The hexadecimal digits don’t get different until you get to 10. Now utilize your binary skills and convert 3 to binary! It turns out to be 0011. Do NOT forget the 0s in the beginning. You will need to put all four digits, even if the first ones are 0, or the answer won’t be right.
        \nE in hex is 14 in decimal, which is 1110 in binary.
        \nSo, we have 1110 - 0011. E3 in hex is 11100011 in binary.
    </string>

    <string name = "hexToDec" >
        \n  I started you off with the hard part this time. Hexadecimal to decimal conversions, and vice versa, are going to seem really easy. In fact, it\’s very similar to converting with decimal and binary, except we are dealing with a different number system this time.
        \nLet\’s say you have 44 in hexadecimal; how do you convert it to decimal?
        \nWell, this is just so easy. Multiply each digit by the value of the digit.
        \n4 x 16 = 64
        \n4 x 1 = 4
        \n64 + 4 = 68
        \n44 in hex is 68 in decimal.
        \nNow, you can check your work by converting it back. How do you go from decimal to hexadecimal?
        \nRemember the rule for binary: go as high as you can, but not over. Same thing applies here. Think about the place values for hexadecimal.
        \nObviously, 256 is too big. Even just one 256 is way bigger than 68. You can, however, multiply 16 by 4 to get 64. You can\’t go beyond that, or the value will be bigger than 68.
        \n68 – 64 = 4
        \nNow we have four left. Let\’s put a 4 in the ones place.
        \nWe end up with 44.
        \nThat concludes the tutorial. Thanks for sticking around and learning hexadecimal! Go on and practice now, and have fun with your new skills.
    </string>

    <string name="contact">
        \nIf you find a bug in the program, please email us at geekymath@gmail.com describing the issue and what happened directly before it occurred.
        \n\nAny compliments, complaints, concerns, and bugs are fully appreciated by our team. Thank you for testing!
        \n\n&#169; GeekyMath 2016
    </string>

</resources>
